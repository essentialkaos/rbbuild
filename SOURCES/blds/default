#!/bin/bash
# shellcheck disable=SC1117,SC2034,SC2086,SC2154

# Start default ruby builder
#
# 1: Package name (String)
# 2: Package build dir (String)
#
# Code: No
# Echo: No
defaultBuilder() {
  checkVersionCompatibility "1.6.0"

  requireCompiler

  local pkg pkg_dir mopts copts iopts prfx thr_num
  local start_time fail conf_file end_time grc_time

  pkg="$1"
  pkg_dir="$2"

  mopts="${MAKEOPTS}"
  copts="${CONFOPTS}"
  iopts="${INSTOPTS}"
  prfx="${XPREFIX:-${prefix}}"

  exportCompilerOpts

  # shellcheck disable=SC1001
  if [[ ! $mopts =~ \-j\  ]] ; then
    if [[ -n "$threads" ]] ; then
      mopts="${mopts} -j $threads"
    else
      thr_num=$(getThreadsNum)
      mopts="${mopts} -j $thr_num"
    fi
  fi

  if [[ -n "$dest_dir" && ! $iopts =~ DESTDIR ]] ; then
    iopts="${iopts} DESTDIR=$dest_dir"
  fi

  pushd "$pkg_dir" &> /dev/null || printErrorAndExit "Can't set working dir to $pkg_dir"

    showm "Buildingâ€¦ "

    [[ -n "$verbose" ]] && show ""

    start_time=$(now)

    if checkPerms "FR" "configure" ; then
      conf_file="configure"
    elif checkPerms "FR" "Configure" ; then
      conf_file="Configure"
    elif checkPerms "FR" "config" ; then
      conf_file="config"
    else
      show "FAIL" $RED
      show ""
      show "Can't find configure file."
      doExit 1
    fi

    exit_protect=true

    spinnerOn

    if [[ -n "$verbose" ]] ; then
      {
        if [[ -z "$fail" ]] ; then
          showe "./$conf_file --prefix=$prfx $copts"
          ./$conf_file --prefix="$prfx" $copts || fail=true
        fi

        if [[ -z "$fail" ]] ; then
          showe "make $mopts"
          make $mopts || fail=true
        fi

        if [[ -z "$fail" ]] ; then
          showe "make install $iopts"
          make install $iopts || fail=true
        fi

      } &>> "$output"
    else
      {
        if [[ -z "$fail" ]] ; then
          ./$conf_file --prefix="$prfx" $copts || fail=true
        fi

        if [[ -z "$fail" ]] ; then
          make $mopts || fail=true
        fi

        if [[ -z "$fail" ]] ; then
          make install $iopts || fail=true
        fi

      } &>> "$log"
    fi

    spinnerOff

    if [[ -n "$fail" ]] ; then
      unset exit_protect
      buildFailed "$prfx"
      return 1
    fi

    fixDLDFlags "$prfx"

    end_time=$(now)
    grc_time=$(getGraceTime "$start_time" "$end_time")

    show "${CL_GREEN}DONE${CL_NORM} ${CL_DARK}($grc_time)${CL_NORM}"

    echo -n > "$log"

    unset exit_protect

  popd &> /dev/null || printErrorAndExit "Can't set working dir"
}

# Fix DLDFLAGS for Ruby 2.4+
#
# 1: Prefix dir (String)
#
# Code: No
# Echo: No
fixDLDFlags() {
  local prfx="$1"
  local config

  config=$(find "$prfx" -name "rbconfig.rb")

  if [[ -z "$config" || ! -w "$config" ]] ; then
    return
  fi

  sed -i '/CONFIG\["DLDFLAGS"\]/c \ \ CONFIG["DLDFLAGS"] = ""' "$config" &> /dev/null
}
